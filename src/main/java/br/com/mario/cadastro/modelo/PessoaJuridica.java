package br.com.mario.cadastro.modelo;

// Generated 16/05/2015 14:37:37 by Hibernate Tools 4.3.1

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;

import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;
import org.hibernate.envers.AuditTable;
import org.hibernate.envers.Audited;

/**
 * PessoaJuridica generated by hbm2java
 */
@Audited
@Entity
@Table(name = "PESSOA_JURIDICA", catalog = "cadastro")
@AuditTable(value="PESSOA_JURIDICA", schema="log", catalog="cadastro")
public class PessoaJuridica implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 3857329506916416844L;
	private int pesId;
	private Pessoa pessoa;
	private String pesCnpj;
	private String pesNomeFantasia;

	public PessoaJuridica() {
	}

	public PessoaJuridica(Pessoa pessoa) {
		this.pessoa = pessoa;
	}

	public PessoaJuridica(Pessoa pessoa, String pesCnpj, String pesNomeFantasia) {
		this.pessoa = pessoa;
		this.pesCnpj = pesCnpj;
		this.pesNomeFantasia = pesNomeFantasia;
	}

	@GenericGenerator(name = "generator", strategy = "foreign", parameters = @Parameter(name = "property", value = "pessoa"))
	@Id
	@GeneratedValue(generator = "generator")
	@Column(name = "PES_ID", unique = true, nullable = false)
	public int getPesId() {
		return this.pesId;
	}

	public void setPesId(int pesId) {
		this.pesId = pesId;
	}

	@OneToOne(fetch = FetchType.LAZY)
	@PrimaryKeyJoinColumn
	public Pessoa getPessoa() {
		return this.pessoa;
	}

	public void setPessoa(Pessoa pessoa) {
		this.pessoa = pessoa;
	}

	@Column(name = "PES_CNPJ", length = 20)
	public String getPesCnpj() {
		return this.pesCnpj;
	}

	public void setPesCnpj(String pesCnpj) {
		this.pesCnpj = pesCnpj;
	}

	@Column(name = "PES_NOME_FANTASIA", length = 150)
	public String getPesNomeFantasia() {
		return this.pesNomeFantasia;
	}

	public void setPesNomeFantasia(String pesNomeFantasia) {
		this.pesNomeFantasia = pesNomeFantasia;
	}

	public static long getSerialversionuid() {
		return serialVersionUID;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((pesCnpj == null) ? 0 : pesCnpj.hashCode());
		result = prime * result + pesId;
		result = prime * result
				+ ((pesNomeFantasia == null) ? 0 : pesNomeFantasia.hashCode());
		result = prime * result + ((pessoa == null) ? 0 : pessoa.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		PessoaJuridica other = (PessoaJuridica) obj;
		if (pesCnpj == null) {
			if (other.pesCnpj != null)
				return false;
		} else if (!pesCnpj.equals(other.pesCnpj))
			return false;
		if (pesId != other.pesId)
			return false;
		if (pesNomeFantasia == null) {
			if (other.pesNomeFantasia != null)
				return false;
		} else if (!pesNomeFantasia.equals(other.pesNomeFantasia))
			return false;
		if (pessoa == null) {
			if (other.pessoa != null)
				return false;
		} else if (!pessoa.equals(other.pessoa))
			return false;
		return true;
	}

	@Override
	public String toString() {
		return "PessoaJuridica [pesId=" + pesId + "]";
	}

}
