package br.com.mario.cadastro.modelo;

// Generated 16/05/2015 14:37:37 by Hibernate Tools 4.3.1

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;

import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;
import org.hibernate.envers.AuditTable;
import org.hibernate.envers.Audited;

/**
 * Endereco generated by hbm2java
 */
@Audited
@Entity
@Table(name = "ENDERECO", catalog = "cadastro")
@AuditTable(value="ENDERECO", schema="log", catalog="cadastro")
public class Endereco implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 4608886846618790179L;
	private int pesId;
	private Bairro bairro;
	private Cidade cidade;
	private Pessoa pessoa;
	private String endLogradouro;
	private String endNumero;
	private String endComplemento;
	private String endCep;

	public Endereco() {
	}

	public Endereco(Bairro bairro, Cidade cidade, Pessoa pessoa) {
		this.bairro = bairro;
		this.cidade = cidade;
		this.pessoa = pessoa;
	}

	public Endereco(Bairro bairro, Cidade cidade, Pessoa pessoa,
			String endLogradouro, String endNumero, String endComplemento,
			String endCep) {
		this.bairro = bairro;
		this.cidade = cidade;
		this.pessoa = pessoa;
		this.endLogradouro = endLogradouro;
		this.endNumero = endNumero;
		this.endComplemento = endComplemento;
		this.endCep = endCep;
	}

	@GenericGenerator(name = "generator", strategy = "foreign", parameters = @Parameter(name = "property", value = "pessoa"))
	@Id
	@GeneratedValue(generator = "generator")
	@Column(name = "PES_ID", unique = true, nullable = false)
	public int getPesId() {
		return this.pesId;
	}

	public void setPesId(int pesId) {
		this.pesId = pesId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "BAI_ID", nullable = false)
	public Bairro getBairro() {
		return this.bairro;
	}

	public void setBairro(Bairro bairro) {
		this.bairro = bairro;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CID_ID", nullable = false)
	public Cidade getCidade() {
		return this.cidade;
	}

	public void setCidade(Cidade cidade) {
		this.cidade = cidade;
	}

	@OneToOne(fetch = FetchType.LAZY)
	@PrimaryKeyJoinColumn
	public Pessoa getPessoa() {
		return this.pessoa;
	}

	public void setPessoa(Pessoa pessoa) {
		this.pessoa = pessoa;
	}

	@Column(name = "END_LOGRADOURO", length = 250)
	public String getEndLogradouro() {
		return this.endLogradouro;
	}

	public void setEndLogradouro(String endLogradouro) {
		this.endLogradouro = endLogradouro;
	}

	@Column(name = "END_NUMERO", length = 90)
	public String getEndNumero() {
		return this.endNumero;
	}

	public void setEndNumero(String endNumero) {
		this.endNumero = endNumero;
	}

	@Column(name = "END_COMPLEMENTO", length = 60)
	public String getEndComplemento() {
		return this.endComplemento;
	}

	public void setEndComplemento(String endComplemento) {
		this.endComplemento = endComplemento;
	}

	@Column(name = "END_CEP", length = 9)
	public String getEndCep() {
		return this.endCep;
	}

	public void setEndCep(String endCep) {
		this.endCep = endCep;
	}

	public static long getSerialversionuid() {
		return serialVersionUID;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((bairro == null) ? 0 : bairro.hashCode());
		result = prime * result + ((cidade == null) ? 0 : cidade.hashCode());
		result = prime * result + ((endCep == null) ? 0 : endCep.hashCode());
		result = prime * result
				+ ((endComplemento == null) ? 0 : endComplemento.hashCode());
		result = prime * result
				+ ((endLogradouro == null) ? 0 : endLogradouro.hashCode());
		result = prime * result
				+ ((endNumero == null) ? 0 : endNumero.hashCode());
		result = prime * result + pesId;
		result = prime * result + ((pessoa == null) ? 0 : pessoa.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Endereco other = (Endereco) obj;
		if (bairro == null) {
			if (other.bairro != null)
				return false;
		} else if (!bairro.equals(other.bairro))
			return false;
		if (cidade == null) {
			if (other.cidade != null)
				return false;
		} else if (!cidade.equals(other.cidade))
			return false;
		if (endCep == null) {
			if (other.endCep != null)
				return false;
		} else if (!endCep.equals(other.endCep))
			return false;
		if (endComplemento == null) {
			if (other.endComplemento != null)
				return false;
		} else if (!endComplemento.equals(other.endComplemento))
			return false;
		if (endLogradouro == null) {
			if (other.endLogradouro != null)
				return false;
		} else if (!endLogradouro.equals(other.endLogradouro))
			return false;
		if (endNumero == null) {
			if (other.endNumero != null)
				return false;
		} else if (!endNumero.equals(other.endNumero))
			return false;
		if (pesId != other.pesId)
			return false;
		if (pessoa == null) {
			if (other.pessoa != null)
				return false;
		} else if (!pessoa.equals(other.pessoa))
			return false;
		return true;
	}

	@Override
	public String toString() {
		return "Endereco [pesId=" + pesId + "]";
	}

}
