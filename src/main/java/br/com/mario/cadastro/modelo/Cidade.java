package br.com.mario.cadastro.modelo;

// Generated 16/05/2015 14:37:37 by Hibernate Tools 4.3.1

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Cidade generated by hbm2java
 */
@Entity
@Table(name = "CIDADE", catalog = "cadastro")
public class Cidade implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -8929837027043561583L;
	private int cidId;
	private String cidNome;
	private String cidUf;
	private Set<Endereco> enderecos = new HashSet<Endereco>(0);

	public Cidade() {
	}

	public Cidade(int cidId) {
		this.cidId = cidId;
	}

	public Cidade(int cidId, String cidNome, String cidUf,
			Set<Endereco> enderecos) {
		this.cidId = cidId;
		this.cidNome = cidNome;
		this.cidUf = cidUf;
		this.enderecos = enderecos;
	}

	@Id
	@GeneratedValue
	@Column(name = "CID_ID", unique = true, nullable = false)
	public int getCidId() {
		return this.cidId;
	}

	public void setCidId(int cidId) {
		this.cidId = cidId;
	}

	@Column(name = "CID_NOME", length = 150)
	public String getCidNome() {
		return this.cidNome;
	}

	public void setCidNome(String cidNome) {
		this.cidNome = cidNome;
	}

	@Column(name = "CID_UF", length = 2)
	public String getCidUf() {
		return this.cidUf;
	}

	public void setCidUf(String cidUf) {
		this.cidUf = cidUf;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "cidade")
	public Set<Endereco> getEnderecos() {
		return this.enderecos;
	}

	public void setEnderecos(Set<Endereco> enderecos) {
		this.enderecos = enderecos;
	}

	public static long getSerialversionuid() {
		return serialVersionUID;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + cidId;
		result = prime * result + ((cidNome == null) ? 0 : cidNome.hashCode());
		result = prime * result + ((cidUf == null) ? 0 : cidUf.hashCode());
		result = prime * result
				+ ((enderecos == null) ? 0 : enderecos.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Cidade other = (Cidade) obj;
		if (cidId != other.cidId)
			return false;
		if (cidNome == null) {
			if (other.cidNome != null)
				return false;
		} else if (!cidNome.equals(other.cidNome))
			return false;
		if (cidUf == null) {
			if (other.cidUf != null)
				return false;
		} else if (!cidUf.equals(other.cidUf))
			return false;
		if (enderecos == null) {
			if (other.enderecos != null)
				return false;
		} else if (!enderecos.equals(other.enderecos))
			return false;
		return true;
	}

	@Override
	public String toString() {
		return "Cidade [cidId=" + cidId + "]";
	}

}
